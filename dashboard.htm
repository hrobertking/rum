<!DOCTYPE html>
<html lang="en">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
		<title>Dashboard</title>
		<style type="text/css">
			body
				{
					max-width:960px;
					margin:auto;
				}
			table
				{
					border:1px solid black;
					border-radius:0.5em;
					margin-bottom:1em;
					padding:0.2em;
					width:100%;
				}
			table caption
				{
					font-style:italic;
					font-weight:bold;
					margin-bottom:0.2em;
					text-align:left;
				}

			thead > tr > td,
			thead > tr > th
				{
					font-weight:bold;
					text-transform:uppercase;
				}

			td.c-ip,
			td.cs-uri-query,
			td.cs-uri-stem,
			td.message,
			td.url
				{
					text-align:left;
				}
			td.sc-status,
			td.sc-bytes,
			td.time-taken,
			td.error-code
				{
					text-align:right;
				}

			tr.request
				{
					background-color:red;
				}
			tr.response
				{
					background-color:yellow;
				}
			tr.request.response
				{
					background-color:green;
				}
			tr.sample
				{
					background-color:lightgray;
				}
		</style>
	</head>
	<body>
		<table id="communication-data">
			<caption>Communication RUM</caption>
			<thead>
				<tr>
					<td class="c-ip">c-ip</td>
					<td class="cs-uri-query">cs-uri-query</td>
					<td class="cs-uri-stem">cs-uri-stem</td>
					<td class="sc-status">sc-status</td>
					<td class="sc-bytes">sc-bytes</td>
					<td class="time-taken">time-taken</td>
				</tr>
			</thead>
			<tbody>
				<tr class="sample">
					<td class="c-ip">255.255.255.255</td>
					<td class="cs-uri-query">fname='robert'&lname='king'</td>
					<td class="cs-uri-stem">/users</td>
					<td class="sc-status">200</td>
					<td class="sc-bytes">100</td>
					<td class="time-taken">160</td>
				</tr>
			</tbody>
		</table>

		<table id="error-data">
			<caption>Error RUM</caption>
			<thead>
				<tr>
					<td class="message">message</td>
					<td class="url">url</td>
					<td class="error-code">error code</td>
				</tr>
			</thead>
			<tbody>
				<tr class="sample">
					<td class="message">14718263910556L7SNX</td>
					<td class="url">/earth/index.htm</td>
					<td class="error-code">418</td>
				</tr>
			</tbody>
		</table>

		<script src="https://cdn.socket.io/socket.io-1.3.5.js"></script>
		<script>
			var socket = io();

			socket.on('communication-event', function(obj) {
				var tbl = document.getElementById('communication-data'),
					tr = document.getElementById('ce:' + obj.id),
					index,
					node,
					col_key = ['c-ip', 'cs-uri-query', 'cs-uri-stem', 'sc-status', 'sc-bytes', 'time-taken'];

				if (!tr) {
					tr = tbl.getElementsByTagName('thead').item(0).rows[0].cloneNode(true);
					for (index = 0; index < tr.cells.length; index += 1) {
						tr.cells[index].innerHTML = '';
					}
					tr.setAttribute('id', 'ce:' + obj.id);
					tbl.getElementsByTagName('tbody').item(0).appendChild(tr);
				}

				// update the class on the entry row
				tr.className += (tr.className.length ? ' ' : '') + obj['event-type'];

				// make sure all the cells are in the row
				while (tr.cells.length < col_key.length) {
					tr.insertCell(-1);
				}

				// get the detail from the object passed into the event
console.log('Event type: '+obj['event-type']);
				for (index = 0; index < col_key.length; index += 1) {
					tr.cells[index].innerHTML = obj[col_key[index]] || tr.cells[index].innerHTML;
console.log('Checking '+index+' ('+col_key[index]+')? ->'+obj[col_key[index]]);
				}

				console.log(JSON.stringify(obj));
			});
			socket.on('error-event', function(obj) {
				//id, uri, error
				var tbl = document.getElementById('error-data'),
					tr = document.getElementById('ee:' + obj.id),
					index,
					node,
					col_key = ['id', 'uri', 'error'];

				if (!tr) {
					tr = tbl.getElementsByTagName('thead').item(0).rows[0].cloneNode(true);
					for (index = 0; index < tr.cells.length; index += 1) {
						tr.cells[index].innerHTML = '';
					}
					tr.setAttribute('id', 'ee:' + obj.id);
					tbl.getElementsByTagName('tbody').item(0).appendChild(tr);
				}

				// update the class on the entry row
				tr.className += (tr.className.length ? ' ' : '') + obj['event-type'];

				// make sure all the cells are in the row
				while (tr.cells.length < col_key.length) {
					tr.insertCell(-1);
				}

				// get the detail from the object passed into the event
				for (index = 0; index < col_key.length; index += 1) {
					tr.cells[index].innerHTML = obj[col_key[index]] || tr.cells[index].innerHTML;
				}

				console.log(JSON.stringify(obj));
			});
		</script>
	</body>
</html>

